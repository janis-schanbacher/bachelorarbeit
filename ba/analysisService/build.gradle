plugins {
  id 'org.springframework.boot' version '2.4.5'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'java'
  id "com.diffplug.spotless" version "5.0.0" // Formatter
  id 'jacoco' // generate code coverage reports
}

group = 'com.ewus.ba'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
  mavenCentral()
}

ext {
  set('springCloudVersion', "2020.0.2")
  spotlessVersion = "3.13.0"
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  implementation group: 'org.json', name: 'json', version: '20201115'

  implementation group: 'mysql', name: 'mysql-connector-java', version: '5.1.13'
  implementation group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '8.2.2.jre8'
  implementation group: 'commons-io', name: 'commons-io', version: '2.6'
  implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.0'

  // Vintage engine is excluded by default in Spring boot > 2.4
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.hsqldb:hsqldb'
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

test {
  useJUnitPlatform()
  finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    reports {
        xml.enabled false
        html.enabled true
        csv.enabled false
    }
}

spotless {
  format 'misc', {
    // define the files to apply `misc` to
    target '*.gradle', '*.md', '.gitignore', '*.yml', '*.java'

    // define the steps to apply to those files
    trimTrailingWhitespace()
    indentWithSpaces(2) // or tabs. Takes an integer argument if you don't like 4
    endWithNewline()
  }
  java {
    // don't need to set target, it is inferred from java

    googleJavaFormat()

    // make sure every file has the following copyright header.
    // optionally, Spotless can set copyright years by digging
    // through git history (see "license" section below)
    // licenseHeader '/* (C)$YEAR */'

    removeUnusedImports()
  }
}
